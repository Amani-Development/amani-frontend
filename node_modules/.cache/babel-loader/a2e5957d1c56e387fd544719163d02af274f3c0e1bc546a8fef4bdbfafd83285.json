{"ast":null,"code":"import { LOGIN_USER, REGISTER_USER, VALIDATE_PHONE_AND_EMAIL, VALIDATE_PASSWORD_AND_EMAIL, VALIDATE_REGISTRATION, RESEND_VERIFICATION, LOGOUT_USER, API_ERROR, CLEAR_API_ERROR, VERIFY_LOGIN, FORGOT_PASSWORD_OTP_VERIFY, FORGOT_PASSWORD, CHANGE_PASSWORD, COUNTRY_UPDATE } from \"store/auth/constants\";\nconsole.log('reducerloca', localStorage.getItem(\"admin_country\"));\nconst initialState = {\n  error: \"\",\n  apiError: null,\n  loading: false,\n  otp_data: {},\n  otp_data_new: {},\n  user_token: null,\n  user_data: null,\n  user_country: localStorage.getItem(\"admin_country\") || null\n};\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_USER.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case FORGOT_PASSWORD.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case FORGOT_PASSWORD.SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case FORGOT_PASSWORD.FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: \"error\"\n      };\n      break;\n    case FORGOT_PASSWORD_OTP_VERIFY.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case FORGOT_PASSWORD_OTP_VERIFY.SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case FORGOT_PASSWORD_OTP_VERIFY.FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: \"error\"\n      };\n      break;\n    case CHANGE_PASSWORD.SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case CHANGE_PASSWORD.FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: \"error\"\n      };\n      break;\n    case LOGIN_USER.SUCCESS:\n      console.log(\"login success\", action.payload);\n      state = {\n        ...state,\n        user_token: action.payload.jwt_token,\n        user_data: action.payload.user,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case REGISTER_USER.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case REGISTER_USER.SUCCESS:\n      state = {\n        ...state,\n        otp_data: action.payload,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case VALIDATE_PHONE_AND_EMAIL.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case VALIDATE_PHONE_AND_EMAIL.SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case VALIDATE_PASSWORD_AND_EMAIL.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case VALIDATE_PASSWORD_AND_EMAIL.SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case VALIDATE_REGISTRATION.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case VALIDATE_REGISTRATION.SUCCESS:\n      state = {\n        ...state,\n        user_token: action.payload.jwt_token,\n        user_data: action.payload.user,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case RESEND_VERIFICATION.REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n      break;\n    case RESEND_VERIFICATION.SUCCESS:\n      state = {\n        ...state,\n        otp_data_new: action.payload,\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case COUNTRY_UPDATE.REQUEST:\n      state = {\n        ...state,\n        user_country: action.payload\n      };\n      break;\n    case VERIFY_LOGIN:\n      state = {\n        ...state,\n        otp_data: action.payload,\n        loading: false\n      };\n      break;\n    case LOGOUT_USER.REQUEST:\n      state = {\n        ...state\n      };\n      break;\n    case LOGOUT_USER.SUCCESS:\n      state = {\n        ...state\n      };\n      break;\n    case API_ERROR:\n      state = {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n      break;\n    case CLEAR_API_ERROR:\n      state = {\n        ...state,\n        error: \"\"\n      };\n      break;\n    default:\n      state = {\n        ...state\n      };\n      break;\n  }\n  return state;\n};\nexport default auth;","map":{"version":3,"names":["LOGIN_USER","REGISTER_USER","VALIDATE_PHONE_AND_EMAIL","VALIDATE_PASSWORD_AND_EMAIL","VALIDATE_REGISTRATION","RESEND_VERIFICATION","LOGOUT_USER","API_ERROR","CLEAR_API_ERROR","VERIFY_LOGIN","FORGOT_PASSWORD_OTP_VERIFY","FORGOT_PASSWORD","CHANGE_PASSWORD","COUNTRY_UPDATE","console","log","localStorage","getItem","initialState","error","apiError","loading","otp_data","otp_data_new","user_token","user_data","user_country","auth","state","action","type","REQUEST","SUCCESS","FAILURE","payload","jwt_token","user"],"sources":["/Users/biggie/amani/src/store/auth/reducer.ts"],"sourcesContent":["import {\n    LOGIN_USER,\n    REGISTER_USER,\n    VALIDATE_PHONE_AND_EMAIL,\n    VALIDATE_PASSWORD_AND_EMAIL,\n    VALIDATE_REGISTRATION,\n    RESEND_VERIFICATION,\n    LOGOUT_USER,\n    API_ERROR,\n    CLEAR_API_ERROR,\n    VERIFY_LOGIN,\n    FORGOT_PASSWORD_OTP_VERIFY,\n    FORGOT_PASSWORD,\n    CHANGE_PASSWORD,\n    COUNTRY_UPDATE\n} from \"store/auth/constants\";\n\nconsole.log('reducerloca', localStorage.getItem(\"admin_country\"))\n\nconst initialState = {\n    error: \"\",\n    apiError: null,\n    loading: false,\n    otp_data: {},\n    otp_data_new: {},\n    user_token: null,\n    user_data: null,\n    user_country: localStorage.getItem(\"admin_country\") || null\n};\n\nconst auth = (state = initialState, action: any) => {\n    switch (action.type) {\n        case LOGIN_USER.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case FORGOT_PASSWORD.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case FORGOT_PASSWORD.SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case FORGOT_PASSWORD.FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: \"error\",\n            };\n            break;\n\n        case FORGOT_PASSWORD_OTP_VERIFY.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case FORGOT_PASSWORD_OTP_VERIFY.SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case FORGOT_PASSWORD_OTP_VERIFY.FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: \"error\",\n            };\n            break;\n\n        case CHANGE_PASSWORD.SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case CHANGE_PASSWORD.FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: \"error\",\n            };\n            break;\n\n        case LOGIN_USER.SUCCESS:\n            console.log(\"login success\", action.payload);\n\n            state = {\n                ...state,\n                user_token: action.payload.jwt_token,\n                user_data: action.payload.user,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case REGISTER_USER.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case REGISTER_USER.SUCCESS:\n            state = {\n                ...state,\n                otp_data: action.payload,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case VALIDATE_PHONE_AND_EMAIL.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case VALIDATE_PHONE_AND_EMAIL.SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case VALIDATE_PASSWORD_AND_EMAIL.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case VALIDATE_PASSWORD_AND_EMAIL.SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case VALIDATE_REGISTRATION.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case VALIDATE_REGISTRATION.SUCCESS:\n            state = {\n                ...state,\n                user_token: action.payload.jwt_token,\n                user_data: action.payload.user,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case RESEND_VERIFICATION.REQUEST:\n            state = {\n                ...state,\n                loading: true,\n                error: \"\",\n            };\n            break;\n\n        case RESEND_VERIFICATION.SUCCESS:\n            state = {\n                ...state,\n                otp_data_new: action.payload,\n                loading: false,\n                error: \"\",\n            };\n            break;\n\n        case COUNTRY_UPDATE.REQUEST:\n            state = {\n                ...state,\n                user_country: action.payload\n            }\n            break;\n\n        case VERIFY_LOGIN:\n            state = {\n                ...state,\n                otp_data: action.payload,\n                loading: false,\n            };\n            break;\n\n        case LOGOUT_USER.REQUEST:\n            state = { ...state };\n            break;\n\n        case LOGOUT_USER.SUCCESS:\n            state = { ...state };\n            break;\n\n        case API_ERROR:\n            state = { ...state, error: action.payload, loading: false };\n            break;\n\n        case CLEAR_API_ERROR:\n            state = { ...state, error: \"\" };\n            break;\n\n        default:\n            state = { ...state };\n            break;\n    }\n    return state;\n};\n\nexport default auth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}