{"ast":null,"code":"import { LOGIN_USER, REGISTER_USER, FORGOT_PASSWORD, FORGOT_PASSWORD_OTP_VERIFY, VALIDATE_PASSWORD_AND_EMAIL, VALIDATE_PHONE_AND_EMAIL, VALIDATE_REGISTRATION, RESEND_VERIFICATION, LOGOUT_USER, API_ERROR, CLEAR_API_ERROR, VERIFY_USER_LOGIN, VERIFY_LOGIN, VERIFY_LOGIN_SUCCESS, CHANGE_PASSWORD, COUNTRY_UPDATE } from \"store/auth/constants\";\nexport const setCountry = response => {\n  return {\n    type: COUNTRY_UPDATE.REQUEST,\n    payload: response || null\n  };\n};\nexport const loginUser = (user, redirect) => {\n  return {\n    type: LOGIN_USER.REQUEST,\n    payload: {\n      user,\n      redirect\n    }\n  };\n};\nexport const loginSuccess = response => {\n  return {\n    type: LOGIN_USER.SUCCESS,\n    payload: response\n  };\n};\nexport const verifyLogin = response => {\n  return {\n    type: VERIFY_LOGIN,\n    payload: response\n  };\n};\nexport const verifyLoginSuccess = response => {\n  return {\n    type: VERIFY_LOGIN_SUCCESS,\n    payload: response\n  };\n};\nexport const ValidateEmailAndPassword = (data, callback) => {\n  return {\n    type: VALIDATE_PASSWORD_AND_EMAIL.REQUEST,\n    payload: {\n      data,\n      callback\n    }\n  };\n};\n_c = ValidateEmailAndPassword;\nexport const registerUser = (user, redirect) => {\n  return {\n    type: REGISTER_USER.REQUEST,\n    payload: {\n      user,\n      redirect\n    }\n  };\n};\nexport const registerSuccess = response => {\n  return {\n    type: REGISTER_USER.SUCCESS,\n    payload: response\n  };\n};\nexport const validatePhoneAndEmail = (data, callback) => {\n  return {\n    type: VALIDATE_PHONE_AND_EMAIL.REQUEST,\n    payload: {\n      data,\n      callback\n    }\n  };\n};\nexport const validatePhoneAndEmailSuccess = response => {\n  return {\n    type: VALIDATE_PHONE_AND_EMAIL.SUCCESS,\n    payload: response\n  };\n};\nexport const validateRegistration = (data, redirect) => {\n  return {\n    type: VALIDATE_REGISTRATION.REQUEST,\n    payload: {\n      data,\n      redirect\n    }\n  };\n};\nexport const validateRegistrationSuccess = response => {\n  return {\n    type: VALIDATE_REGISTRATION.SUCCESS,\n    payload: response\n  };\n};\nexport const resendVerification = (data, redirect) => {\n  return {\n    type: RESEND_VERIFICATION.REQUEST,\n    payload: {\n      data,\n      redirect\n    }\n  };\n};\nexport const resendVerificationSuccess = response => {\n  return {\n    type: RESEND_VERIFICATION.SUCCESS,\n    payload: response\n  };\n};\nexport const verifyUserLogin = verify_payload => {\n  return {\n    type: VERIFY_USER_LOGIN,\n    payload: {\n      verify_payload\n    }\n  };\n};\nexport const forgotPasswordUser = (user, callback, verifyTokenCallback) => {\n  return {\n    type: FORGOT_PASSWORD.REQUEST,\n    payload: {\n      user,\n      callback,\n      verifyTokenCallback\n    }\n  };\n};\nexport const forgotPasswordUserSuccess = response => {\n  return {\n    type: FORGOT_PASSWORD.SUCCESS,\n    payload: response\n  };\n};\nexport const VerifyOtpPasswordReset = (user, callback, setResetTokenCallback) => {\n  return {\n    type: FORGOT_PASSWORD_OTP_VERIFY.REQUEST,\n    payload: {\n      user,\n      callback,\n      setResetTokenCallback\n    }\n  };\n};\n_c2 = VerifyOtpPasswordReset;\nexport const VerifyOtpPasswordResetSuccess = response => {\n  return {\n    type: FORGOT_PASSWORD_OTP_VERIFY.SUCCESS,\n    payload: response\n  };\n};\n_c3 = VerifyOtpPasswordResetSuccess;\nexport const postNewPassword = (user, callback) => {\n  return {\n    type: CHANGE_PASSWORD.REQUEST,\n    payload: {\n      user,\n      callback\n    }\n  };\n};\nexport const postNewPasswordSuccess = response => {\n  return {\n    type: CHANGE_PASSWORD.SUCCESS,\n    payload: response\n  };\n};\nexport const logoutUser = (user, history) => {\n  return {\n    type: LOGOUT_USER.REQUEST,\n    payload: {\n      user,\n      history\n    }\n  };\n};\nexport const logoutUserSuccess = () => {\n  return {\n    type: LOGOUT_USER.SUCCESS,\n    payload: {}\n  };\n};\nexport const apiError = error => {\n  return {\n    type: API_ERROR,\n    payload: error\n  };\n};\nexport const clearErrors = error => {\n  return {\n    type: CLEAR_API_ERROR,\n    payload: error\n  };\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ValidateEmailAndPassword\");\n$RefreshReg$(_c2, \"VerifyOtpPasswordReset\");\n$RefreshReg$(_c3, \"VerifyOtpPasswordResetSuccess\");","map":{"version":3,"names":["LOGIN_USER","REGISTER_USER","FORGOT_PASSWORD","FORGOT_PASSWORD_OTP_VERIFY","VALIDATE_PASSWORD_AND_EMAIL","VALIDATE_PHONE_AND_EMAIL","VALIDATE_REGISTRATION","RESEND_VERIFICATION","LOGOUT_USER","API_ERROR","CLEAR_API_ERROR","VERIFY_USER_LOGIN","VERIFY_LOGIN","VERIFY_LOGIN_SUCCESS","CHANGE_PASSWORD","COUNTRY_UPDATE","setCountry","response","type","REQUEST","payload","loginUser","user","redirect","loginSuccess","SUCCESS","verifyLogin","verifyLoginSuccess","ValidateEmailAndPassword","data","callback","_c","registerUser","registerSuccess","validatePhoneAndEmail","validatePhoneAndEmailSuccess","validateRegistration","validateRegistrationSuccess","resendVerification","resendVerificationSuccess","verifyUserLogin","verify_payload","forgotPasswordUser","verifyTokenCallback","forgotPasswordUserSuccess","VerifyOtpPasswordReset","setResetTokenCallback","_c2","VerifyOtpPasswordResetSuccess","_c3","postNewPassword","postNewPasswordSuccess","logoutUser","history","logoutUserSuccess","apiError","error","clearErrors","$RefreshReg$"],"sources":["/Users/biggie/amani/src/store/auth/actions.ts"],"sourcesContent":["import {\n  LOGIN_USER,\n  REGISTER_USER,\n  FORGOT_PASSWORD,\n  FORGOT_PASSWORD_OTP_VERIFY,\n  VALIDATE_PASSWORD_AND_EMAIL,\n  VALIDATE_PHONE_AND_EMAIL,\n  VALIDATE_REGISTRATION,\n  RESEND_VERIFICATION,\n  LOGOUT_USER,\n  API_ERROR,\n  CLEAR_API_ERROR,\n  VERIFY_USER_LOGIN,\n  VERIFY_LOGIN,\n  VERIFY_LOGIN_SUCCESS,\n  CHANGE_PASSWORD,\n  COUNTRY_UPDATE\n} from \"store/auth/constants\";\n\nimport {\n  IUserSignin,\n  IUserSignUp,\n  IValidatePhoneAndEmail,\n  IValidateEmailAndPassword\n} from \"store/auth/types\";\n\nexport const setCountry = (response: any) => {\n  return {\n    type: COUNTRY_UPDATE.REQUEST,\n    payload: response || null\n  };\n}\n\nexport const loginUser = (user: IUserSignin, redirect: string) => {\n  return {\n    type: LOGIN_USER.REQUEST,\n    payload: { user, redirect },\n  };\n};\n\nexport const loginSuccess = (response: any) => {\n  return {\n    type: LOGIN_USER.SUCCESS,\n    payload: response,\n  };\n};\n\nexport const verifyLogin = (response: any) => {\n  return {\n    type: VERIFY_LOGIN,\n    payload: response,\n  };\n};\n\nexport const verifyLoginSuccess = (response: any) => {\n  return {\n    type: VERIFY_LOGIN_SUCCESS,\n    payload: response,\n  }\n}\n\nexport const ValidateEmailAndPassword = (\n  data: IValidateEmailAndPassword,\n  callback: any\n) => {\n  return {\n    type: VALIDATE_PASSWORD_AND_EMAIL.REQUEST,\n    payload: { data, callback },\n  };\n};\n\n\nexport const registerUser = (user: IUserSignUp, redirect: string) => {\n  return {\n    type: REGISTER_USER.REQUEST,\n    payload: { user, redirect },\n  };\n};\n\nexport const registerSuccess = (response: any) => {\n  return {\n    type: REGISTER_USER.SUCCESS,\n    payload: response,\n  };\n};\n\nexport const validatePhoneAndEmail = (\n  data: IValidatePhoneAndEmail,\n  callback: any\n) => {\n  return {\n    type: VALIDATE_PHONE_AND_EMAIL.REQUEST,\n    payload: { data, callback },\n  };\n};\n\nexport const validatePhoneAndEmailSuccess = (response: any) => {\n  return {\n    type: VALIDATE_PHONE_AND_EMAIL.SUCCESS,\n    payload: response,\n  };\n};\n\nexport const validateRegistration = (data: any, redirect: string) => {\n  return {\n    type: VALIDATE_REGISTRATION.REQUEST,\n    payload: { data, redirect },\n\n  };\n};\n\nexport const validateRegistrationSuccess = (response: any) => {\n  return {\n    type: VALIDATE_REGISTRATION.SUCCESS,\n    payload: response,\n  };\n};\n\nexport const resendVerification = (\n  data: { email: string },\n  redirect: string\n) => {\n  return {\n    type: RESEND_VERIFICATION.REQUEST,\n    payload: { data, redirect },\n  };\n};\n\nexport const resendVerificationSuccess = (response: any) => {\n  return {\n    type: RESEND_VERIFICATION.SUCCESS,\n    payload: response,\n  };\n};\n\nexport const verifyUserLogin = (verify_payload: any) => {\n  return {\n    type: VERIFY_USER_LOGIN,\n    payload: { verify_payload },\n  };\n};\n\nexport const forgotPasswordUser = (user: IUserSignin, callback: any, verifyTokenCallback: any) => {\n  return {\n    type: FORGOT_PASSWORD.REQUEST,\n    payload: { user, callback, verifyTokenCallback },\n  };\n};\n\nexport const forgotPasswordUserSuccess = (response: any) => {\n  return {\n    type: FORGOT_PASSWORD.SUCCESS,\n    payload: response\n  };\n};\n\nexport const VerifyOtpPasswordReset = (user: IUserSignin, callback: any, setResetTokenCallback: any) => {\n  return {\n    type: FORGOT_PASSWORD_OTP_VERIFY.REQUEST,\n    payload: { user, callback, setResetTokenCallback },\n  };\n};\n\nexport const VerifyOtpPasswordResetSuccess = (response: any) => {\n  return {\n    type: FORGOT_PASSWORD_OTP_VERIFY.SUCCESS,\n    payload: response\n  };\n};\n\nexport const postNewPassword = (user: any, callback: any) => {\n  return {\n    type: CHANGE_PASSWORD.REQUEST,\n    payload: { user, callback },\n  };\n};\n\nexport const postNewPasswordSuccess = (response: any) => {\n  return {\n    type: CHANGE_PASSWORD.SUCCESS,\n    payload: response\n  };\n};\n\n\nexport const logoutUser = (user: any, history: any) => {\n  return {\n    type: LOGOUT_USER.REQUEST,\n    payload: { user, history },\n  };\n};\n\nexport const logoutUserSuccess = () => {\n  return {\n    type: LOGOUT_USER.SUCCESS,\n    payload: {},\n  };\n};\n\nexport const apiError = (error: any) => {\n  return {\n    type: API_ERROR,\n    payload: error,\n  };\n};\n\nexport const clearErrors = (error: any) => {\n  return {\n    type: CLEAR_API_ERROR,\n    payload: error,\n  };\n};"],"mappings":"AAAA,SACEA,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,wBAAwB,EACxBC,qBAAqB,EACrBC,mBAAmB,EACnBC,WAAW,EACXC,SAAS,EACTC,eAAe,EACfC,iBAAiB,EACjBC,YAAY,EACZC,oBAAoB,EACpBC,eAAe,EACfC,cAAc,QACT,sBAAsB;AAS7B,OAAO,MAAMC,UAAU,GAAIC,QAAa,IAAK;EAC3C,OAAO;IACLC,IAAI,EAAEH,cAAc,CAACI,OAAO;IAC5BC,OAAO,EAAEH,QAAQ,IAAI;EACvB,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,SAAS,GAAGA,CAACC,IAAiB,EAAEC,QAAgB,KAAK;EAChE,OAAO;IACLL,IAAI,EAAElB,UAAU,CAACmB,OAAO;IACxBC,OAAO,EAAE;MAAEE,IAAI;MAAEC;IAAS;EAC5B,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIP,QAAa,IAAK;EAC7C,OAAO;IACLC,IAAI,EAAElB,UAAU,CAACyB,OAAO;IACxBL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,WAAW,GAAIT,QAAa,IAAK;EAC5C,OAAO;IACLC,IAAI,EAAEN,YAAY;IAClBQ,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAIV,QAAa,IAAK;EACnD,OAAO;IACLC,IAAI,EAAEL,oBAAoB;IAC1BO,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,wBAAwB,GAAGA,CACtCC,IAA+B,EAC/BC,QAAa,KACV;EACH,OAAO;IACLZ,IAAI,EAAEd,2BAA2B,CAACe,OAAO;IACzCC,OAAO,EAAE;MAAES,IAAI;MAAEC;IAAS;EAC5B,CAAC;AACH,CAAC;AAACC,EAAA,GARWH,wBAAwB;AAWrC,OAAO,MAAMI,YAAY,GAAGA,CAACV,IAAiB,EAAEC,QAAgB,KAAK;EACnE,OAAO;IACLL,IAAI,EAAEjB,aAAa,CAACkB,OAAO;IAC3BC,OAAO,EAAE;MAAEE,IAAI;MAAEC;IAAS;EAC5B,CAAC;AACH,CAAC;AAED,OAAO,MAAMU,eAAe,GAAIhB,QAAa,IAAK;EAChD,OAAO;IACLC,IAAI,EAAEjB,aAAa,CAACwB,OAAO;IAC3BL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMiB,qBAAqB,GAAGA,CACnCL,IAA4B,EAC5BC,QAAa,KACV;EACH,OAAO;IACLZ,IAAI,EAAEb,wBAAwB,CAACc,OAAO;IACtCC,OAAO,EAAE;MAAES,IAAI;MAAEC;IAAS;EAC5B,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,4BAA4B,GAAIlB,QAAa,IAAK;EAC7D,OAAO;IACLC,IAAI,EAAEb,wBAAwB,CAACoB,OAAO;IACtCL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMmB,oBAAoB,GAAGA,CAACP,IAAS,EAAEN,QAAgB,KAAK;EACnE,OAAO;IACLL,IAAI,EAAEZ,qBAAqB,CAACa,OAAO;IACnCC,OAAO,EAAE;MAAES,IAAI;MAAEN;IAAS;EAE5B,CAAC;AACH,CAAC;AAED,OAAO,MAAMc,2BAA2B,GAAIpB,QAAa,IAAK;EAC5D,OAAO;IACLC,IAAI,EAAEZ,qBAAqB,CAACmB,OAAO;IACnCL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMqB,kBAAkB,GAAGA,CAChCT,IAAuB,EACvBN,QAAgB,KACb;EACH,OAAO;IACLL,IAAI,EAAEX,mBAAmB,CAACY,OAAO;IACjCC,OAAO,EAAE;MAAES,IAAI;MAAEN;IAAS;EAC5B,CAAC;AACH,CAAC;AAED,OAAO,MAAMgB,yBAAyB,GAAItB,QAAa,IAAK;EAC1D,OAAO;IACLC,IAAI,EAAEX,mBAAmB,CAACkB,OAAO;IACjCL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMuB,eAAe,GAAIC,cAAmB,IAAK;EACtD,OAAO;IACLvB,IAAI,EAAEP,iBAAiB;IACvBS,OAAO,EAAE;MAAEqB;IAAe;EAC5B,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAACpB,IAAiB,EAAEQ,QAAa,EAAEa,mBAAwB,KAAK;EAChG,OAAO;IACLzB,IAAI,EAAEhB,eAAe,CAACiB,OAAO;IAC7BC,OAAO,EAAE;MAAEE,IAAI;MAAEQ,QAAQ;MAAEa;IAAoB;EACjD,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAI3B,QAAa,IAAK;EAC1D,OAAO;IACLC,IAAI,EAAEhB,eAAe,CAACuB,OAAO;IAC7BL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAM4B,sBAAsB,GAAGA,CAACvB,IAAiB,EAAEQ,QAAa,EAAEgB,qBAA0B,KAAK;EACtG,OAAO;IACL5B,IAAI,EAAEf,0BAA0B,CAACgB,OAAO;IACxCC,OAAO,EAAE;MAAEE,IAAI;MAAEQ,QAAQ;MAAEgB;IAAsB;EACnD,CAAC;AACH,CAAC;AAACC,GAAA,GALWF,sBAAsB;AAOnC,OAAO,MAAMG,6BAA6B,GAAI/B,QAAa,IAAK;EAC9D,OAAO;IACLC,IAAI,EAAEf,0BAA0B,CAACsB,OAAO;IACxCL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAACgC,GAAA,GALWD,6BAA6B;AAO1C,OAAO,MAAME,eAAe,GAAGA,CAAC5B,IAAS,EAAEQ,QAAa,KAAK;EAC3D,OAAO;IACLZ,IAAI,EAAEJ,eAAe,CAACK,OAAO;IAC7BC,OAAO,EAAE;MAAEE,IAAI;MAAEQ;IAAS;EAC5B,CAAC;AACH,CAAC;AAED,OAAO,MAAMqB,sBAAsB,GAAIlC,QAAa,IAAK;EACvD,OAAO;IACLC,IAAI,EAAEJ,eAAe,CAACW,OAAO;IAC7BL,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAGD,OAAO,MAAMmC,UAAU,GAAGA,CAAC9B,IAAS,EAAE+B,OAAY,KAAK;EACrD,OAAO;IACLnC,IAAI,EAAEV,WAAW,CAACW,OAAO;IACzBC,OAAO,EAAE;MAAEE,IAAI;MAAE+B;IAAQ;EAC3B,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAO;IACLpC,IAAI,EAAEV,WAAW,CAACiB,OAAO;IACzBL,OAAO,EAAE,CAAC;EACZ,CAAC;AACH,CAAC;AAED,OAAO,MAAMmC,QAAQ,GAAIC,KAAU,IAAK;EACtC,OAAO;IACLtC,IAAI,EAAET,SAAS;IACfW,OAAO,EAAEoC;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,WAAW,GAAID,KAAU,IAAK;EACzC,OAAO;IACLtC,IAAI,EAAER,eAAe;IACrBU,OAAO,EAAEoC;EACX,CAAC;AACH,CAAC;AAAC,IAAAzB,EAAA,EAAAgB,GAAA,EAAAE,GAAA;AAAAS,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAT,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}